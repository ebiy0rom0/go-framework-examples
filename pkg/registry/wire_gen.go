// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package registry

import (
	"examples/pkg/adapter/handler"
	"examples/pkg/adapter/infra"
	"examples/pkg/adapter/repository"
	"examples/pkg/logic"
)

// Injectors from app_container.go:

// wireç”¨
func InitializeAppController(sqlh infra.SqlHandler, store infra.LocalStore) *AppContainer {
	userRepository := repository.NewUserRepository(sqlh)
	loginRepository := repository.NewLoginRepository(sqlh)
	userLogic := logic.NewUserLogic(userRepository, loginRepository)
	userHandler := handler.NewUserHandler(userLogic)
	sessionRepository := repository.NewSessionRepository(store)
	sessionLogic := logic.NewSessionLogic(sessionRepository, loginRepository)
	sessionHandler := handler.NewSessionHandler(userLogic, sessionLogic)
	appContainer := NewAppContainer(userHandler, sessionHandler)
	return appContainer
}

// app_container.go:

type AppContainer struct {
	User    handler.UserHandler
	Session handler.SessionHandler
}

func NewAppContainer(userHandler handler.UserHandler, sessionHandler handler.SessionHandler) *AppContainer {
	return &AppContainer{
		User:    userHandler,
		Session: sessionHandler,
	}
}
